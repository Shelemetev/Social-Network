{"version":3,"file":"static/js/753.6265d341.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/Profile/ProfilePost/ProfilePost.module.css?1666","webpack://my-app/./src/comon/textarea/PostTextarea.module.css?017a","comon/textarea/PostTextarea.jsx","components/Profile/ProfilePost/PostForm.jsx","webpack://my-app/./src/components/Profile/ProfilePost/Post/Post.module.css?2918","components/Profile/ProfilePost/Post/Post.jsx","components/Profile/ProfilePost/ProfilePost.jsx","webpack://my-app/./src/components/Profile/ProfileStatus/ProfileStatus.module.css?1f32","components/Profile/ProfileStatus/ProfileStatusWithHook.jsx","components/Profile/Profile.jsx","redux/redux-select/profile-reselect.js","components/Profile/ProfileContainer.jsx","hocs/RedirectHoc.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile__img-box\":\"Profile_profile__img-box__pSCga\",\"profile__img\":\"Profile_profile__img__uW39D\",\"profile__text\":\"Profile_profile__text__G2Ve2\"};","// extracted by mini-css-extract-plugin\nexport default {\"post__textarea\":\"ProfilePost_post__textarea__rzex-\",\"post__button\":\"ProfilePost_post__button__VWCfT\"};","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"PostTextarea_textarea__aXcVJ\",\"textarea__error\":\"PostTextarea_textarea__error__fcgOq\",\"error__text\":\"PostTextarea_error__text__cy-tl\",\"block\":\"PostTextarea_block__RBAuR\"};","import s from './PostTextarea.module.css'\r\n\r\nexport const PostTextarea = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <div  className={s.block}>\r\n            <textarea {...props.input} className={\r\n                `${s.textarea} ${props.meta.error && props.meta.touched && s.textarea__error}`\r\n            }></textarea>\r\n            <span className={props.meta.error && props.meta.touched && s.error__text}>{props.meta.touched && props.meta.error}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n// s.textarea","import s from './ProfilePost.module.css'\r\nimport { PostTextarea } from './../../../comon/textarea/PostTextarea';\r\nimport React from 'react';\r\nimport { FieldCreation } from './../../../comon/Field/Field';\r\n\r\nconst PostForm = React.memo( (props) => {\r\n    return (\r\n        <div className=\"\">\r\n            <form onSubmit={props.handleSubmit} action=\"\">\r\n                {FieldCreation(s.post__textarea,'','post',[],PostTextarea)}\r\n                <button className={s.post__button}>Отправить</button>\r\n            </form> \r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PostForm","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__4Q17R\",\"post__img\":\"Post_post__img__Batdw\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = React.memo( (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s['post__img-box']}>\r\n                <img src={props.photo} alt=\"\" className={s.post__img} />\r\n            </div>\r\n            <p className={s.post__text}>\r\n                {props.text}\r\n            </p>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Post","import s from './ProfilePost.module.css'\r\nimport React, { PureComponent } from 'react'\r\nimport PostForm from './PostForm';\r\nimport { reduxForm } from 'redux-form';\r\nimport Post from './Post/Post';\r\n\r\nclass ProfilePost extends PureComponent {\r\n\r\n    onSubmit = (data) => {\r\n        this.props.addPostActionCreator(data.post)\r\n    }\r\n\r\n    \r\n\r\n    render () {\r\n        return (\r\n            <div className={s.post}>\r\n                <ReduxPostForm onSubmit={this.onSubmit} />\r\n                <div className=\"posts\">\r\n                    {\r\n                        this.props.postData.map(item => <Post key={item.id} text={item.messege} photo={(this.props.photos.small != null ? this.props.photos.small : (this.props.photos.large != null ? this.props.photos.large : 'https://avatars.mds.yandex.net/i?id=21dcf193f9d4ea021c56529f8af1956a46b3ed81-10844270-images-thumbs&n=13'))} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet ReduxPostForm = reduxForm({\r\n    form: 'post'\r\n})(PostForm)\r\n\r\nexport default ProfilePost","// extracted by mini-css-extract-plugin\nexport default {\"disable\":\"ProfileStatus_disable__Ra2xT\",\"profile__status-input\":\"ProfileStatus_profile__status-input__gwrDM\"};","import React, {useEffect, useState} from \"react\"\r\nimport s from '../ProfileStatus/ProfileStatus.module.css'\r\n\r\nconst ProfileStatusWithHook = React.memo( props => {\r\n\r\n    console.log('render');\r\n\r\n    let [active,setActive] = useState(true)\r\n    let [status,setStatus] = useState(`${props.status}`)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let Active = () => {\r\n        setActive(false)\r\n    }\r\n\r\n    let Disactive = (Word) => {\r\n        setActive(true)\r\n        props.putStatusThunk(status)\r\n    }\r\n\r\n    let onChange = (word) => {\r\n        setStatus(word)\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile__status}>\r\n            {\r\n                active && <span onClick={() => Active()} className={ s['profile__status-text']}>{status}</span>\r\n            }\r\n            {\r\n                !active && <input autoFocus value={status} onChange={(evnt) => onChange(evnt.currentTarget.value)} onBlur={() => Disactive()} className={s['profile__status-input']}></input>\r\n            }         \r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default ProfileStatusWithHook","import React, { PureComponent } from \"react\"\r\nimport s from './Profile.module.css'\r\nimport { useParams } from \"react-router-dom\"\r\nimport ProfilePost from './ProfilePost/ProfilePost';\r\nimport ProfileStatusWithHook from \"./ProfileStatus/ProfileStatusWithHook\";\r\n\r\nclass Profile extends PureComponent {\r\n    componentDidMount() {\r\n        this.props.getStatusThunk(this.props.id);   \r\n    }\r\n\r\n    componentDidUpdate(f1) {\r\n        if(f1.id !== this.props.id) {\r\n            this.props.getDataThunk(this.props.id);  \r\n            this.props.stopLoader() \r\n        }\r\n        if(f1.status !== this.props.status) {\r\n            this.props.getStatusThunk(this.props.id);   \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ProfileView postData={this.props.postData} addPostActionCreator={this.props.addPostActionCreator} id={this.props.id} putStatusThunk={this.props.putStatusThunk} status={this.props.status} name={this.props.name} setId={this.props.setId} photos={this.props.photos} />\r\n        )\r\n    }\r\n}\r\n\r\nconst ProfileView = React.memo ((props) => {\r\n\r\n    let params = useParams();\r\n    props.setId(params)\r\n\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <div className={s['profile__img-box']}>\r\n                <img src={\r\n                    (props.photos.small != null ? props.photos.small : (props.photos.large != null ? props.photos.large : 'https://avatars.mds.yandex.net/i?id=21dcf193f9d4ea021c56529f8af1956a46b3ed81-10844270-images-thumbs&n=13'))\r\n                } className={s.profile__img} />\r\n            </div>\r\n            <p className={s.profile__text}>{props.name}</p>\r\n            <ProfileStatusWithHook putStatusThunk={props.putStatusThunk} status={props.status} />\r\n            <ProfilePost  postData={props.postData} photos={props.photos} addPostActionCreator={props.addPostActionCreator} />\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\nexport default Profile ","export let getId = (state) => {\r\n    return state.profileData.id\r\n}\r\n\r\nexport let getPhotos = (state) => {\r\n    return state.profileData.Data.photos\r\n}\r\n\r\nexport let getName = (state) => {\r\n    return state.profileData.Data.fullName\r\n}\r\n\r\nexport let getAboutMe = (state) => {\r\n    return state.profileData.Data.aboutMe\r\n}\r\n\r\nexport let getPostData = (state) => {\r\n    return state.profileData.postData\r\n}","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport Profile from \"./Profile\";\r\nimport { setId,getDataThunk,getStatusThunk,putStatusThunk,addPostActionCreator } from \"../../redux/profile-reducer\";\r\nimport RedirectHoc from \"../../hocs/RedirectHoc\";\r\nimport { getStatus } from \"../../redux/redux-select/auth-reselect\";\r\nimport { getAboutMe, getId, getName, getPhotos} from \"../../redux/redux-select/profile-reselect\";\r\nimport { getPostData } from './../../redux/redux-select/profile-reselect';\r\nimport { stopLoader } from './../../redux/finding-reducer';\r\n\r\nlet f1 = (state) => {\r\n    return {\r\n        statusLogin: getStatus(state),\r\n        id: getId(state),\r\n        photos: getPhotos(state),\r\n        name: getName(state),\r\n        status: getAboutMe(state),\r\n        postData: getPostData(state)\r\n    }\r\n}\r\n\r\n\r\nconst ProfileContainer = compose(\r\n    connect(f1,\r\n        {\r\n            setId,\r\n            getDataThunk,\r\n            getStatusThunk,\r\n            putStatusThunk,\r\n            addPostActionCreator,\r\n            stopLoader\r\n        }),\r\n    RedirectHoc\r\n)(Profile)\r\n\r\nexport default ProfileContainer","import React, { PureComponent } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst RedirectHoc = (Component) => {\r\n    class NavigateHOC extends PureComponent  {\r\n        render() {\r\n            if(this.props.statusLogin === false) {\r\n                return <Navigate to={'/login/'}/>\r\n            } else {\r\n                return <Component {...this.props}/>\r\n            }\r\n        }\r\n    }\r\n\r\n    return NavigateHOC\r\n}\r\n\r\nexport default RedirectHoc"],"names":["PostTextarea","props","console","log","_jsxs","className","s","children","_jsx","_objectSpread","input","concat","meta","error","touched","React","onSubmit","handleSubmit","action","FieldCreation","post__textarea","post__button","post","src","photo","alt","post__img","post__text","text","ProfilePost","_PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","data","addPostActionCreator","_createClass","key","value","_this2","ReduxPostForm","this","postData","map","item","Post","messege","photos","small","large","id","PureComponent","reduxForm","form","PostForm","_useState","useState","_useState2","_slicedToArray","active","setActive","_useState3","status","_useState4","setStatus","useEffect","profile__status","onClick","autoFocus","onChange","evnt","word","currentTarget","onBlur","putStatusThunk","Profile","getStatusThunk","f1","getDataThunk","stopLoader","ProfileView","name","setId","params","useParams","profile","profile__img","profile__text","ProfileStatusWithHook","getId","state","profileData","getPhotos","Data","getName","fullName","getAboutMe","aboutMe","getPostData","compose","connect","statusLogin","getStatus","RedirectHoc","Component","NavigateHOC","Navigate","to"],"sourceRoot":""}